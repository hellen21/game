package cr.fi.grupomutual.website.controllers;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mobile.device.Device;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import cr.fi.grupomutual.website.entities.Rate;
import cr.fi.grupomutual.website.entities.locations.InterestPoints;
import cr.fi.grupomutual.website.entities.locations.Province;
import cr.fi.grupomutual.website.entities.locations.InterestPoints.ConsultarPuntosDeInteresMsjRespTipo.ListaPuntoInteres;
import cr.fi.grupomutual.website.entities.locations.Province.ConsultarProvinciaMsjRespTipo.ListaProvincia;
import cr.fi.grupomutual.website.services.NearMeService;
import cr.fi.grupomutual.website.utilities.Utils;
import cr.fi.grupomutual.website.ws.HomeWsClient;
import cr.fi.grupomutual.website.ws.SectionWsClient;


@Controller
public class MutualBenefitstController {
	@Autowired
	HomeWsClient homeWsClient;
	@Autowired
	SectionWsClient sectionWsClient;
	@Autowired
	Utils util;
	Logger fileLog = Logger.getLogger("file");
	

	@Autowired
	private NearMeService nearMeService;
	
	
	@RequestMapping(value = "/mutualBeneficios")
	public String contact( HttpServletRequest request, Model model, Device device){
		boolean isTablet = device.isTablet();
		model.addAttribute("device", isTablet);
		String company = (String) request.getSession().getAttribute("company");
		Rate rate=null;
		// Call the service RateChange, to get the rate change value
		try {
			 rate = homeWsClient.getRateChangeValue();
		} catch (Exception e) {
			fileLog.error("Rate error "+e.toString());
			rate= new Rate();
			rate.setAmmountBuy("0");
			rate.setAmmountSell("0");
		}
		List<ListaPuntoInteres> listMutualBeneficts = new ArrayList<InterestPoints.ConsultarPuntosDeInteresMsjRespTipo.ListaPuntoInteres>();
		try {
			listMutualBeneficts= nearMeService.getMutualBenefict();
		} catch (RuntimeException e) {
			// TODO Auto-generated catch block
			fileLog.error("InterestPoitLocations error "+e.toString());
			e.printStackTrace();
		}
		
	
		model.addAttribute("listMutualBeneficts",listMutualBeneficts);
		model.addAttribute(rate);
		model.addAttribute("itemList", util.getIdItemsFooter(company));
		model.addAttribute("menuTit", util.viewListMenu(company));
		model.addAttribute("footerCarousel", util.getFooterCarouselHTML());
		model.addAttribute("company", "?company="+company);
		return "mutualBenefitst";
		
	}
	//Get the points comercios afiliados
	
	@RequestMapping(value = "/getBenefic")
	public @ResponseBody List<ListaPuntoInteres> getInterestPoints(){
		ArrayList<ListaPuntoInteres> pointBenefic= new ArrayList<ListaPuntoInteres>();
		try {
			for(int y=1; y<=7;y++){
				String idProvince=Integer.toString(y);
				List<ListaPuntoInteres> interestPoints = nearMeService.getInterestPoints(idProvince,"0","0");
				for (int i = 0; i < interestPoints.size(); i++) {
					if(interestPoints.get(i).getCategoriaPuntoInteres().getIdCategory().equals("3")){
						pointBenefic.add(interestPoints.get(i));
					}
				}
			}
			return pointBenefic;
		} catch (RuntimeException e) {
			fileLog.error("IterestPoints error "+e.toString());
			e.printStackTrace();
		} 
		return null;
	}

}
