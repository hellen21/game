package cr.fi.grupomutual.website.controllers;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mobile.device.Device;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import cr.fi.grupomutual.website.entities.ContentPage;
import cr.fi.grupomutual.website.entities.ContentSection;
import cr.fi.grupomutual.website.entities.MatchContent;
import cr.fi.grupomutual.website.entities.Rate;
import cr.fi.grupomutual.website.entities.Structure;
import cr.fi.grupomutual.website.entities.ContentSection.ConsultSectionContentMsjRespType;
import cr.fi.grupomutual.website.entities.Structure.ConsultStructureSiteMsjRestType.Section;
import cr.fi.grupomutual.website.entities.locations.InterestPoints;
import cr.fi.grupomutual.website.entities.locations.Province;
import cr.fi.grupomutual.website.entities.locations.InterestPoints.ConsultarPuntosDeInteresMsjRespTipo.ListaPuntoInteres;
import cr.fi.grupomutual.website.entities.locations.Province.ConsultarProvinciaMsjRespTipo.ListaProvincia;
import cr.fi.grupomutual.website.services.NearMeService;
import cr.fi.grupomutual.website.utilities.Utils;
import cr.fi.grupomutual.website.ws.HomeWsClient;
import cr.fi.grupomutual.website.ws.SectionWsClient;


@Controller
public class MutualBenefitstController {
	@Autowired
	HomeWsClient homeWsClient;
	@Autowired
	SectionWsClient sectionWsClient;
	@Autowired
	Utils util;
	Logger fileLog = Logger.getLogger("file");
	

	@Autowired
	private NearMeService nearMeService;
	
	
	@RequestMapping(value = "/mutualBeneficios")
	public String contact( HttpServletRequest request, Model model, Device device){
		boolean isTablet = device.isTablet();
		model.addAttribute("device", isTablet);
		String company = (String) request.getSession().getAttribute("company");
		boolean noMain = false;
		if(company == null){
			company="1";
			noMain = true;
		}
		
		Rate rate=null;
		// Call the service RateChange, to get the rate change value
		try {
			 rate = homeWsClient.getRateChangeValue();
			 if(noMain){
				 String resp = showHome(company);
				 MatchContent contentMath=util.searchMath(resp);
				 ContentPage contentPage = util.generatePage(company, resp, contentMath.getSliderList(), contentMath.getCasillaList(), contentMath.getCarouselList());
			 }
		} catch (Exception e) {
			fileLog.error("Rate error "+e.toString());
			rate= new Rate();
			rate.setAmmountBuy("0");
			rate.setAmmountSell("0");
		}
		List<ListaPuntoInteres> listMutualBeneficts = new ArrayList<InterestPoints.ConsultarPuntosDeInteresMsjRespTipo.ListaPuntoInteres>();
		try {
			listMutualBeneficts= nearMeService.getMutualBenefict();
		} catch (RuntimeException e) {
			// TODO Auto-generated catch block
			fileLog.error("InterestPoitLocations error "+e.toString());
			e.printStackTrace();
		}
		
	
		model.addAttribute("listMutualBeneficts",listMutualBeneficts);
		model.addAttribute(rate);
		model.addAttribute("itemList", util.getIdItemsFooter(company));
		model.addAttribute("menuTit", util.viewListMenu(company));
		model.addAttribute("footerCarousel", util.getFooterCarouselHTML());
		model.addAttribute("company", "?company="+company);
		model.addAttribute("branch", "");
		return "mutualBenefitst";
		
	}
	//Get the points comercios afiliados
	
	@RequestMapping(value = "/getBenefic")
	public @ResponseBody List<ListaPuntoInteres> getInterestPoints(){
		ArrayList<ListaPuntoInteres> pointBenefic= new ArrayList<ListaPuntoInteres>();
		try {
			for(int y=1; y<=7;y++){
				String idProvince=Integer.toString(y);
				List<ListaPuntoInteres> interestPoints = nearMeService.getInterestPoints(idProvince,"0","0");
				if(interestPoints!=null){
					for (int i = 0; i < interestPoints.size(); i++) {
						if(interestPoints.get(i).getCategoriaPuntoInteres().getIdCategory().equals("3")){
							pointBenefic.add(interestPoints.get(i));
						}
					}
				}
				
			}
			return pointBenefic;
		} catch (RuntimeException e) {
			fileLog.error("IterestPoints error "+e.toString());
			e.printStackTrace();
		} 
		return null;
	}
	
	
	public String showHome(String company) {
		String rest = "";
		// listM is a Arraylist that contains the elements the structure class
		ArrayList<Section> listM = new ArrayList<Section>();
		// listMenu is a ArrayList that return the elements should view in the
		// menu the page html
		Structure structure=null;
		try {
			structure = sectionWsClient.getStructureSite(company);
		} catch (Exception e) {
			fileLog.error("Structure error "+e.toString());
			// TODO: handle exception
		}
		// fill the listM with the each section elements the menu
		try {
			listM = structure.getConsultStructureSiteMsjRestType().getSection();
		} catch (Exception e) {
			fileLog.error("Structure errors "+e.toString());
			// TODO: handle exception
		}
		List<Section> listItemFooter= new ArrayList<Structure.ConsultStructureSiteMsjRestType.Section>();
		for (int x = 0; x < listM.size(); x++) {
			Section listMTemp = listM.get(x);
			if (listMTemp.getSectionFather().contains("-1")||listMTemp.getSectionFather().contains("0")) {
				if (listMTemp.getTypeSection().getTypeSection().contains("Pagina")||listMTemp.getTypeSection().getTypeSection().contains("Menu")) {
					if(listMTemp.getTitle().contains("Home")){
						if(listMTemp.getEstatus().contains("P")){
							ContentSection contentSection=sectionWsClient.getContentSection(listMTemp.getCode(),company);
							if(contentSection.getConsultContentSectionMsjRespType()!=null){
								ConsultSectionContentMsjRespType contentType=contentSection.getConsultContentSectionMsjRespType();
								if(contentType!=null){
									if(contentType.getSection()!=null){
										rest = contentType.getSection().getContent();
										return rest;
									}
								}
							}
						}
					}
				}
			}
		}
		return rest;
	}

}
